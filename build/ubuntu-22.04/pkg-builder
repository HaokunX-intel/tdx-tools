#!/usr/bin/bash

THIS_DIR=$(readlink -f "$(dirname "$0")")
BUILD_DIR="${THIS_DIR}/.."
BUILDER=pkg-builder-ubuntu-22.04

USING_EXITING_IMG=false
SCRIPT=""

usage() {
    cat << EOM
Usage: $(basename "$0") [OPTION]...
  -s                        Specify the path to the script
  -e                        Using existing building container image
  -h                        Show this help
EOM
}

process_args() {
    while getopts ":s:eh" option; do
        case "$option" in
            e) USING_EXITING_IMG=true;;
            s) SCRIPT=$OPTARG;;
            h) usage
               exit 0
               ;;
            *)
               echo "Invalid option '-$OPTARG'"
               usage
               exit 1
               ;;
        esac
    done
}

check_docker_cmd() {
    if ! command -v docker &> /dev/null; then
        echo "Please install docker first."
        exit 1
    fi
}

check_user_in_docker() {
    if [[ "$(groups "$USER")" != *"docker"* ]]; then
        echo "Please add the current user $USER into docker group."
        exit 1
    fi
}

build_docker_image() {
    echo "Build container image..."
    docker build -t "${BUILDER}" docker-pkg-builder
}

# shellcheck disable=SC2086
run_in_docker() {
    DOCKER_ARGS=" \
        -e http_proxy -e https_proxy -e no_proxy \
        -v ${BUILD_DIR}:/root/build \
        -w /root/build/ubuntu-22.04 \
	--rm \
    "

    if [ $1 == "--shell" ]; then
      docker run ${DOCKER_ARGS} \
        -it \
        "${BUILDER}" bash
    else
      docker run ${DOCKER_ARGS} \
        -i --entrypoint "/root/build/ubuntu-22.04/$1" \
        "${BUILDER}" $2
    fi
}

process_args "$@"

check_docker_cmd
check_user_in_docker

if [[ $USING_EXITING_IMG == "false" ]]; then
    build_docker_image
fi

# Run build script within docker
run_in_docker $SCRIPT
